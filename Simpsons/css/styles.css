@import url("https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap");
* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}
#wrapper {
  width: 80%; 
  margin: auto;
  display: flex; /* makes the display flexbos*/
  justify-content: space-evenly; /* just put even space between the items */ 
  flex-direction: column; /*makes the items go in a column*/
  flex-wrap: wrap; /*wraps around the screen when there is not space left*/
  /* display: flex;
  flex-wrap: wrap;  thechnicallly shoulve worked but didnt
  This makes a container that we can manipulate instead of <body>
  
  */
}

body {
  background: rgb(255, 211, 13);
  
  /* Dont touch the body, just color and stuff
  
  display: flex;
  flex-wrap: flex; */
}

header {
  text-align: center;
  /* no need for aic and jcc just text align if theres only text
   position: absolute; */
  background-color: #5ea9f0d7;
  padding: 1em;
}

header h2 {
  /* position: relative; */
  font-size: 3vw;
  color: #fff;
}

.simpsons{
  width: 100%;
  height: auto;
  max-width: 100%;
  object-fit: cover;
  vertical-align: top;
}

.simpsons img {
  object-fit: cover;
  width: 100%;
  height: 80%;
  vertical-align: top;
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
}

main {
  background-color: #fff;
  width: 100%;
  text-align: justify;
  display: flex;
  gap: 2vh;
  padding: 2em 1em;
}
nav {
  width: 30%;
  height: 40%;
  display: flex;
  align-items: center;
  background-color: #5ea9f0d7;
  padding: 2vw;
}

nav ul {
  list-style: none;
  padding: 2vw;
  display: flex;
  justify-content: center;
  justify-content: center;
}

nav ul li a {
  padding: 0.5vw;
  border: 1vw;
  color: white;
  display: block;
  text-align: center;
  font-size: 1.5vw;
}

#text {
  padding-top: 5vh;

}
#text h1 {
  padding: 2vw;
  color: rgb(255, 211, 13);
  font-size: 3vw;
}

#text p {
  word-spacing: 0.2vw;
  text-align: center;
  font-size: 1.0vw;
  text-align: justify;
}

aside {
  background-color: #5ea9f0d7;
  width: 20%;
  padding: 2vw;
  height: 90%;
}
aside figcaption {
  font-size: 1.7vw;
  color: #fff;
  font-weight: bolder;
  white-space: nowrap;
}
aside figure img {
  width: 100%;
  border-radius: 0.2vw;
  border: solid;
  border-color: #fff;
}

aside p {
  color: #fff;
  text-align: justify;
  font-size: 1.5vw;
}

footer {
  background-color: #0d44e8;
  width: 100%;
  text-align: center;

}

footer small {
  color: #fff;
}
/* #section {
  background-color: purple;
}


.section {
  background-color: blue;
}
section {
  background-color: red;
}

section {
  background-color: green !important;
} */

@media screen and (max-width) {
} /*  this means that any media that has a screen and the max width then the css that you put between the {} will apply  @media MUST be the las thing in the css because if its not the code will ignore it as theres already another tag behind it https://www.youtube.com/watch?reload=9&time_continue=379&v=yU7jJ3NbPdA&embeds_referring_euri=https%3A%2F%2Fwww.bing.com%2F&embeds_referring_origin=https%3A%2F%2Fwww.bing.com&source_ve_path=MTM5MTE3LDEzOTExNywyODY2Ng 


https://css-tricks.com/responsive-layouts-fewer-media-queries/

*/
